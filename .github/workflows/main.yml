name: CI

on: [pull_request, workflow_dispatch]

jobs:
  phpstan:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 8.1
          - 8.2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, sockets

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Run phpstan
        run: composer phpstan


  ecs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 8.1
          - 8.2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, sockets

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Run code-sniffer
        run: composer check-cs


  phpunit:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        composer-arg:
          - "install"
          - "update --prefer-lowest"
        php-version:
          - 8.1
          - 8.2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, sockets

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer ${{ matrix.composer-arg }} --prefer-dist

      - name: Run tests
        run: composer phpunit

  library-health-status:
    runs-on: ubuntu-latest
    needs: [phpstan, ecs, phpunit]
    if: always()
    outputs:
      health: ${{ steps.check-status.outputs.health }}
    steps:
      - name: Check workflow status
        id: check-status
        run: |
          if [[ "${{ needs.phpstan.result }}" == "failure" || \
                "${{ needs.ecs.result }}" == "failure" || \
                "${{ needs.phpunit.result }}" == "failure" ]]; then
            echo "health=false" >> $GITHUB_OUTPUT
          else
            echo "health=true" >> $GITHUB_OUTPUT
          fi

  report-health-status:
    uses: BrandEmbassy/github-actions/.github/workflows/library-health-status.yml@feature/library-health-status-workflow
    needs: [library-health-status]
    if: always()
    with:
      CI_STATUS: ${{ needs.library-health-status.outputs.health }}
      TEAMS_WEBHOOK_URL: ${{ vars.TEAMS_WEBHOOK_URL }}


