name: CI

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Every day at 00:00 UTC

jobs:
  phpstan:
    strategy:
      matrix:
        php-version:
          - 8.2
          - 8.3
          - 8.4
    uses: BrandEmbassy/github-actions/.github/workflows/php-phpstan.yml@master
    secrets:
      COMPOSER_TOKEN: ${{ secrets.COMPOSER_TOKEN }}
    with:
      PHP_VERSION: ${{ matrix.php-version }}

  ecs:
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - 8.2
          - 8.3
          - 8.4
    uses: BrandEmbassy/github-actions/.github/workflows/php-ecs.yml@master
    secrets:
      COMPOSER_TOKEN: ${{ secrets.COMPOSER_TOKEN }}
    with:
      PHP_VERSION: ${{ matrix.php-version }}

  rector:
    uses: BrandEmbassy/github-actions/.github/workflows/php-rector.yml@master
    secrets:
      COMPOSER_TOKEN: ${{ secrets.COMPOSER_TOKEN }}
    with:
      RECTOR_CACHE_PATH: './var/rector'
      PHP_VERSION: '8.2'

  phpunit:
    strategy:
      matrix:
        composer-arg:
          - "install"
          - "update --prefer-lowest"
        php-version:
          - 8.2
          - 8.3
          - 8.4
        exclude:
          - composer-arg: install
            php-version: 8.1
    uses: BrandEmbassy/github-actions/.github/workflows/php-phpunit.yml@master
    secrets:
      COMPOSER_TOKEN: ${{ secrets.COMPOSER_TOKEN }}
    with:
      COMPOSER_ARG: ${{ matrix.composer-arg }}
      PHP_VERSION: ${{ matrix.php-version }}

  phpunit-with-sonar-qube:
    uses: BrandEmbassy/github-actions/.github/workflows/php-phpunit-with-sonar-qube.yml@master
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      COMPOSER_TOKEN: ${{ secrets.COMPOSER_TOKEN }}

  report-health-status:
    needs: [ phpstan, ecs, phpunit ]
    if: always()
    uses: BrandEmbassy/github-actions/.github/workflows/library-health-status.yml@feature/library-health-status-workflow
    with:
      CI_RESULTS: >
        [
          {"name":"phpstan", "status":"${{ needs.phpstan.result }}"},
          {"name":"ecs", "status":"${{ needs.ecs.result }}"},
          {"name":"phpunit", "status":"${{ needs.phpunit.result }}"}
          {"name":"rector", "status":"${{ needs.rector.result }}"}
        ]
      TEAMS_WEBHOOK_URL: ${{ vars.LIBRARY_HEALTH_MS_TEAMS_WEBHOOK }}
      GITHUB_ACCESS_TOKEN: ${{ secrets.BE_TECH_ACCOUNT }}
